{"version":3,"sources":["Form/styled.js","Form/index.js","Form/useRatesData.js","Header/styled.js","Header/index.js","resources/background.jpg","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Core/styled.js","Core/App.js","reportWebVitals.js","Core/GlobalStyle.js","index.js","theme.js"],"names":["FormSetup","styled","form","Fieldset","fieldset","Legend","legend","Label","label","Input","select","input","StyledButton","button","Info","div","Form","ratesData","useState","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","date","useRatesData","amount","setAmount","currency","setCurrency","result","setResult","onSubmit","event","preventDefault","value","onChange","target","required","type","min","step","as","Object","keys","map","toFixed","disabled","onClick","rate","StyledHeader","header","theme","breakpoints","mobile","Title","h1","colors","gray","waikawaGray","Paragraph","p","Header","Container","main","background","StyledClock","time","toLocaleString","weekday","day","month","hour","minute","second","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","Footer","footer","FooterContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","concrete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e57fcb7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormSetup = styled.form`\r\n  font-family: \"Josefin Slab\", serif;\r\n  font-weight: 700;\r\n  letter-spacing: 0.82px;\r\n  text-align: center;\r\n  margin: 20px auto;\r\n  width: 100%;\r\n  max-width: 420px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n  font-size: 22px;\r\n`;\r\n\r\nexport const Label = styled.label``;\r\n\r\nexport const Select = styled.select`\r\n  text-shadow: 1px 1px rgb(0, 0, 0);\r\n  color: rgb(255, 0, 0);\r\n  background-color: rgb(180, 180, 180);\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: black;\r\n\r\n  &:disabled {\r\n    background-color: rgb(255, 255, 255);\r\n    color: black;\r\n    border: white;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  text-shadow: 1px 1px black;\r\n  color: rgb(0, 185, 31);\r\n  background-color: rgb(180, 180, 180);\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  padding-top: 25px;\r\n  padding-bottom: 10px;\r\n`;\r\n","import { useState } from \"react\";\r\nimport {\r\n  FormSetup,\r\n  Fieldset,\r\n  Legend,\r\n  Label,\r\n  StyledButton,\r\n  Input,\r\n  Info,\r\n} from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nexport const Form = () => {\r\n  const ratesData = useRatesData();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"EUR\");\r\n  const [result, setResult] = useState(0);\r\n\r\n  const getCurrency = () => {\r\n    const rate = ratesData.rates[currency];\r\n    if (amount >= 0) {\r\n      setResult(() => amount * rate);\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <FormSetup onSubmit={onFormSubmit}>\r\n      <Fieldset>\r\n        <Legend>Currency converter</Legend>\r\n        {ratesData.state === \"loading\" ? (\r\n          <p>Loading currencies from the European Central Bank.</p>\r\n        ) : ratesData.state === \"error\" ? (\r\n          <p>Sorry... something went wrong... check internet.</p>\r\n        ) : (\r\n          <>\r\n            <p>\r\n              <Label>I have: PLN</Label>\r\n            </p>\r\n            <p>\r\n              <Label>\r\n                <Input\r\n                  value={amount}\r\n                  onChange={({ target }) => setAmount(target.value)}\r\n                  required\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                />\r\n              </Label>\r\n            </p>\r\n            <p>\r\n              <Label>\r\n                {\" \"}\r\n                I want:\r\n                <Input\r\n                  as=\"select\"\r\n                  value={currency}\r\n                  onChange={({ target }) => setCurrency(target.value)}\r\n                >\r\n                  {Object.keys(ratesData.rates).map((currency) => (\r\n                    <option key={currency} value={currency}>\r\n                      {currency}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </Label>\r\n            </p>\r\n            <p>\r\n              <Label>\r\n                <Input\r\n                  value={result.toFixed(2)}\r\n                  onChange={({ target }) => setResult(target.value)}\r\n                  disabled={true}\r\n                  type=\"number\"\r\n                />\r\n              </Label>\r\n            </p>\r\n            <StyledButton onClick={getCurrency}>Convert</StyledButton>\r\n            <Info>\r\n              Exchange rates are taken from the European Central Bank. <br />\r\n              Valid as of the date: {ratesData.date}\r\n            </Info>\r\n          </>\r\n        )}\r\n      </Fieldset>\r\n    </FormSetup>\r\n  );\r\n};\r\nexport default Form;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n  const base_url = \"https://api.exchangerate.host/latest?base=PLN\"\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      try {\r\n        const response = await fetch(base_url);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText)\r\n        }\r\n        const { rates, date } = await response.json();\r\n        setRatesData({ state: \"success\", rates, date });\r\n\r\n      } catch {\r\n        setRatesData({\r\n          state: \"error\",\r\n        });\r\n      }\r\n    };\r\n    setTimeout(fetchApi, 2_000);\r\n  }, []);\r\n  return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    font-size: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        font-size: 17px; \r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    padding-top: 150px;\r\n    text-shadow: 2px 2px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin-top: 70px;\r\n    text-shadow: 1px 1px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;","import { StyledHeader, Title, Paragraph } from \"./styled\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <Title>\r\n                Welcome in Currency Converter\r\n            </Title>\r\n            <Paragraph>\r\n                nobody can cheat you here\r\n            </Paragraph>\r\n        </StyledHeader>\r\n    )\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/background.a19b2427.jpg\";","import styled from \"styled-components\";\r\nimport background from \"../resources/background.jpg\"\r\n\r\nexport const Container = styled.main`\r\n    font-family: 'Josefin Slab', serif, cursive;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-top: -60px;\r\n    max-width: 100%;\r\n    height: 400px;\r\n`;\r\n\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const StyledClock = styled.div`\r\n    font-family: 'Roboto Mono', monospace;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items:flex-end;\r\n    font-size: 12px;\r\n    margin-right: 20px;\r\n    margin-bottom: 15px;\r\n`;\r\n","import { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst time = (date) =>\r\n  date.toLocaleString(\"en-UK\", {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n  });\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return <StyledClock>Today is {time(date)}</StyledClock>;\r\n};\r\n\r\nexport default Clock;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};","import styled from \"styled-components\"\r\n\r\nexport const Footer = styled.footer`\r\n    padding: 7px;\r\n    width: 100%;\r\n    font-size: 20px;\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(11, 11, 11);\r\n    text-align: center;\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n    width:100%;\r\n    position: fixed;\r\n    bottom: 0;\r\n`;\r\n\r\n\r\nexport default Footer;","import Form from \"../Form\";\r\nimport Header from \"../Header\";\r\nimport Container from \"../Container\";\r\nimport Clock from \"../Clock\";\r\nimport { Footer, FooterContainer } from \"./styled\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Form />\r\n      <FooterContainer>\r\n        <Clock />\r\n        <Footer>YouCode</Footer>\r\n      </FooterContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  background-color: ${({theme}) => theme.colors.concrete};\r\n}\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Core/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyle } from './Core/GlobalStyle';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    colors: {\r\n        waikawaGray: \"#57609a\",\r\n        gray: \"rgb(108 107 107)\",\r\n        concrete: \"#F2F2F2\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 600\r\n    },\r\n};"],"sourceRoot":""}