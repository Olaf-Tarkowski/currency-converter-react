{"version":3,"sources":["Form/styled.js","Form/index.js","Header/styled.js","Header/index.js","Footer/index.js","background.jpg","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["FormSetup","styled","form","Fieldset","fieldset","Legend","legend","Label","label","Input","select","input","StyledButton","button","Form","useState","amount","setAmount","currency","setCurrency","convertCurrency","setConvertCurrency","currencyOptions","setCurrencyOptions","console","log","useEffect","a","fetch","response","ok","Error","statusText","json","rates","Object","values","error","fetchApi","onSubmit","event","preventDefault","value","onChange","target","type","min","step","as","keys","map","option","toFixed","disabled","onClick","StyledHeader","header","theme","breakpoints","mobile","Title","h1","colors","gray","waikawaGray","Paragraph","p","Header","Footer","footer","Container","main","background","StyledClock","time","date","toLocaleString","weekday","day","month","hour","minute","second","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","concrete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24cf966d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormSetup = styled.form`\r\n    font-family: 'Josefin Slab', serif;\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    width: 100%;\r\n    max-width: 400px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    text-shadow: 1px 1px rgb(0, 0, 0);\r\n    font-weight: 700;\r\n    color: rgb(255, 0, 0);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    box-shadow: black;\r\n    \r\n    &:disabled {\r\n        background-color: rgb(255, 255, 255);\r\n        color: black;\r\n        border: white;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    text-shadow: 1px 1px black;\r\n    font-weight: 700;\r\n    color: rgb(0, 185, 31);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { FormSetup, Fieldset, Legend, Label, StyledButton, Input } from \"./styled\"\r\n\r\nconst base_url = \"https://api.exchangerate.host/latest?base=PLN\"\r\n\r\nconst Form = () => {\r\n  const [amount, setAmount] = useState('')\r\n  const [currency, setCurrency] = useState(1)\r\n  const [convertCurrency, setConvertCurrency] = useState(0)\r\n\r\n  const [currencyOptions, setCurrencyOptions] = useState({});\r\n  console.log(currency);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      try {\r\n        const response = await fetch(base_url);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText)\r\n        }\r\n        const { rates } = await response.json();\r\n        setCurrencyOptions({ rates });\r\n        setCurrency([...Object.values(rates)])\r\n        console.log(rates)\r\n      } catch (error) {\r\n        console.error(\"huj\")\r\n      }\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const getCurrency = () => {\r\n    if (amount >= 0) {\r\n      setConvertCurrency(() => amount * currency)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormSetup onSubmit={onFormSubmit}>\r\n      <Fieldset>\r\n        <Legend>\r\n          Currency converter\r\n        </Legend>\r\n        <p>\r\n          <Label>\r\n            I have: PLN\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label>\r\n            <Input value={amount} onChange={({ target }) => setAmount(target.value)} type=\"number\" min=\"0\" step=\"0.01\" />\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label> I want:\r\n            <Input as=\"select\" value={currency} onChange={({ target }) => setCurrency(target.value)}>\r\n              {Object.keys(currencyOptions).map((option) => (\r\n                <option key={option} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label>\r\n            <Input value={convertCurrency.toFixed(2)} onChange={({ target }) => setConvertCurrency(target.value)} disabled={true} type=\"number\" />\r\n          </Label>\r\n        </p>\r\n        <StyledButton onClick={getCurrency}>\r\n          Convert\r\n        </StyledButton>\r\n      </Fieldset>\r\n    </FormSetup >\r\n  )\r\n}\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    font-size: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        font-size: 17px; \r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    padding-top: 150px;\r\n    text-shadow: 2px 2px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin-top: 70px;\r\n    text-shadow: 1px 1px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;","import { StyledHeader, Title, Paragraph } from \"./styled\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <Title>\r\n                Welcome in Currency Converter\r\n            </Title>\r\n            <Paragraph>\r\n                nobody can cheat you here, i guess?\r\n            </Paragraph>\r\n        </StyledHeader>\r\n    )\r\n}\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const Footer = styled.footer`\r\n    padding: 7px;\r\n    font-size: 20px;\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(11, 11, 11);\r\n    text-align: center;\r\n`;\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/background.a19b2427.jpg\";","import styled from \"styled-components\";\r\nimport background from \"../background.jpg\"\r\n\r\nexport const Container = styled.main`\r\n    font-family: 'Josefin Slab', serif, cursive;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-top: -60px;\r\n    max-width: 100%;\r\n    height: 400px;\r\n`;\r\n\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 12px;\r\n    margin-right: 19px;\r\n    padding-top: 380px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        padding-top: 100px;\r\n    }\r\n`;","import { StyledClock } from \"./styled\"\r\nimport { useCurrentDate } from \"./useCurrentDate\"\r\n\r\nconst time = (date) => date.toLocaleString(\"en-UK\", {\r\n  weekday: \"long\",\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\",\r\n});\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <StyledClock>\r\n      Today is {time(date)}\r\n    </StyledClock>\r\n  );\r\n}\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};","import Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Container from \"./Container\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Form />\r\n      <Clock />\r\n      <Footer>\r\n        YouCode\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  background-color: ${({theme}) => theme.colors.concrete};\r\n}\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        waikawaGray: \"#57609a\",\r\n        gray: \"rgb(108 107 107)\",\r\n        concrete: \"#F2F2F2\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 600\r\n    },\r\n};"],"sourceRoot":""}