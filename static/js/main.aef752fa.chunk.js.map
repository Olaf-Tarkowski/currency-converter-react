{"version":3,"sources":["Form/styled.js","Form/index.js","Form/useRatesData.js","Header/styled.js","Header/index.js","Footer/index.js","background.jpg","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["FormSetup","styled","form","Fieldset","fieldset","Legend","legend","Label","label","Input","select","input","StyledButton","button","Form","ratesData","useState","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","date","useRatesData","amount","setAmount","currency","setCurrency","result","setResult","onSubmit","event","preventDefault","value","onChange","target","required","type","min","step","as","Object","keys","map","toFixed","disabled","onClick","rate","StyledHeader","header","theme","breakpoints","mobile","Title","h1","colors","gray","waikawaGray","Paragraph","p","Header","Footer","footer","Container","main","background","StyledClock","time","toLocaleString","weekday","day","month","hour","minute","second","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","concrete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aef752fa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormSetup = styled.form`\r\n    font-family: 'Josefin Slab', serif;\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    width: 100%;\r\n    max-width: 400px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    text-shadow: 1px 1px rgb(0, 0, 0);\r\n    font-weight: 700;\r\n    color: rgb(255, 0, 0);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    box-shadow: black;\r\n    \r\n    &:disabled {\r\n        background-color: rgb(255, 255, 255);\r\n        color: black;\r\n        border: white;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    text-shadow: 1px 1px black;\r\n    font-weight: 700;\r\n    color: rgb(0, 185, 31);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;","import { useState } from \"react\";\r\nimport { FormSetup, Fieldset, Legend, Label, StyledButton, Input } from \"./styled\"\r\nimport { useRatesData } from \"./useRatesData\"\r\n\r\n\r\nexport const Form = () => {\r\n  const ratesData = useRatesData();\r\n  const [amount, setAmount] = useState('')\r\n  const [currency, setCurrency] = useState(\"EUR\")\r\n  const [result, setResult] = useState(0)\r\n\r\n\r\n  const getCurrency = () => {\r\n    const rate = ratesData.rates[currency];\r\n    if (amount >= 0) {\r\n      setResult(() => amount * rate)\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n    <FormSetup onSubmit={onFormSubmit}>\r\n      <Fieldset>\r\n        <Legend>\r\n          Currency converter\r\n        </Legend>\r\n        {ratesData.state === \"loading\"\r\n          ? (\r\n            <p>\r\n              Loading currencies from the European Central Bank.\r\n            </p>\r\n          )\r\n          : (ratesData.state === \"error\"\r\n            ? (\r\n              <p>\r\n                Sorry... something went wrong... check internet.\r\n              </p>\r\n            ) : (\r\n              <>\r\n                <p>\r\n                  <Label>\r\n                    I have: PLN\r\n                  </Label>\r\n                </p>\r\n                <p>\r\n                  <Label>\r\n                    <Input value={amount} onChange={({ target }) => setAmount(target.value)} required type=\"number\" min=\"0\" step=\"0.01\" />\r\n                  </Label>\r\n                </p>\r\n                <p>\r\n                  <Label> I want:\r\n                    <Input as=\"select\" value={currency} onChange={({ target }) => setCurrency(target.value)}>\r\n                      {Object.keys(ratesData.rates).map(((currency) => (\r\n                        <option key={currency} value={currency}>\r\n                          {currency}\r\n                        </option>\r\n                      )))}\r\n                    </Input>\r\n                  </Label>\r\n                </p>\r\n                <p>\r\n                  <Label>\r\n                    <Input value={result.toFixed(2)} onChange={({ target }) => setResult(target.value)} disabled={true} type=\"number\" />\r\n                  </Label>\r\n                </p>\r\n                <StyledButton onClick={getCurrency}>\r\n                  Convert\r\n                </StyledButton>\r\n                <p>\r\n                  Exchange rates are taken from the European Central Bank. <br />\r\n                  Valid as of the date: {ratesData.date}\r\n                </p>\r\n              </>))}\r\n      </Fieldset>\r\n    </FormSetup >\r\n  )\r\n};\r\nexport default Form;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n  const base_url = \"https://api.exchangerate.host/latest?base=PLN\"\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      try {\r\n        const response = await fetch(base_url);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText)\r\n        }\r\n        const { rates, date } = await response.json();\r\n        setRatesData({ state: \"success\", rates, date });\r\n\r\n      } catch {\r\n        setRatesData({\r\n          state: \"error\",\r\n        });\r\n      }\r\n    };\r\n    setTimeout(fetchApi, 2_000);\r\n  }, []);\r\n  return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    font-size: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        font-size: 17px; \r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    padding-top: 150px;\r\n    text-shadow: 2px 2px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin-top: 70px;\r\n    text-shadow: 1px 1px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;","import { StyledHeader, Title, Paragraph } from \"./styled\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <Title>\r\n                Welcome in Currency Converter\r\n            </Title>\r\n            <Paragraph>\r\n                nobody can cheat you here\r\n            </Paragraph>\r\n        </StyledHeader>\r\n    )\r\n}\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const Footer = styled.footer`\r\n    position: fixed;\r\n    bottom: 0;\r\n    padding: 7px;\r\n    width: 100%;\r\n    font-size: 20px;\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(11, 11, 11);\r\n    text-align: center;\r\n`;\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/background.a19b2427.jpg\";","import styled from \"styled-components\";\r\nimport background from \"../background.jpg\"\r\n\r\nexport const Container = styled.main`\r\n    font-family: 'Josefin Slab', serif, cursive;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-top: -60px;\r\n    max-width: 100%;\r\n    height: 400px;\r\n`;\r\n\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 12px;\r\n    margin-right: 19px;\r\n    padding-top: 300px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        padding-top: 100px;\r\n    }\r\n`;","import { StyledClock } from \"./styled\"\r\nimport { useCurrentDate } from \"./useCurrentDate\"\r\n\r\nconst time = (date) => date.toLocaleString(\"en-UK\", {\r\n  weekday: \"long\",\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\",\r\n});\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <StyledClock>\r\n      Today is {time(date)}\r\n    </StyledClock>\r\n  );\r\n}\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};","import Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Container from \"./Container\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Form />\r\n      <Clock />\r\n      <Footer>\r\n        YouCode\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  background-color: ${({theme}) => theme.colors.concrete};\r\n}\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        waikawaGray: \"#57609a\",\r\n        gray: \"rgb(108 107 107)\",\r\n        concrete: \"#F2F2F2\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 600\r\n    },\r\n};"],"sourceRoot":""}