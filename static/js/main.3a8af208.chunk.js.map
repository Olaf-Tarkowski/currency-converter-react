{"version":3,"sources":["Form/currencies.js","Form/styled.js","Form/index.js","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","background.jpg","Container/styled.js","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","name","value","FormSetup","styled","form","Fieldset","fieldset","Legend","legend","Label","label","Select","select","Input","input","StyledButton","button","Form","useState","amount","setAmount","find","cur","currency","setCurrency","convertCurrency","setConvertCurrency","onSubmit","event","preventDefault","onChange","target","type","min","step","map","toFixed","disabled","onClick","StyledHeader","header","theme","breakpoints","mobile","Title","h1","colors","gray","waikawaGray","Paragraph","p","Header","StyledFooter","footer","Footer","Main","main","background","Container","children","StyledClock","time","date","toLocaleString","weekday","day","month","hour","minute","second","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a8af208.chunk.js","sourcesContent":["export const currencies = [\r\n    { name: \"EUR\", value: \"4.5633\" },\r\n    { name: \"USD\", value: \"3.7736\" },\r\n    { name: \"GBP\", value: \"5.2474\" },\r\n    { name: \"CHF\", value: \"4.1282\" },\r\n]","import styled from \"styled-components\";\r\n\r\nexport const FormSetup = styled.form`\r\n    font-family: 'Josefin Slab', serif;\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    width: 100%;\r\n    max-width: 400px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    text-shadow: 1px 1px rgb(0, 0, 0);\r\n    font-weight: 700;\r\n    color: rgb(255, 0, 0);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    box-shadow: black;\r\n    \r\n    &:disabled {\r\n        background-color: rgb(255, 255, 255);\r\n        color: black;\r\n        border: white;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    text-shadow: 1px 1px black;\r\n    font-weight: 700;\r\n    color: rgb(0, 185, 31);\r\n    background-color: rgb(180, 180, 180);\r\n    border-radius: 5px;\r\n`;","import { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\nimport { FormSetup, Fieldset, Legend, Label, Select, StyledButton, Input } from \"./styled\"\r\n\r\n\r\n\r\nconst Form = () => {\r\n  const [amount, setAmount] = useState(\"\")\r\n  const [currency, setCurrency] = useState(currencies.find((cur) => cur.name === \"EUR\").value)\r\n  const [convertCurrency, setConvertCurrency] = useState(0)\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const getCurrency = () => {\r\n    if (amount >= 0) {\r\n      setConvertCurrency(() => amount / currency)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormSetup onSubmit={onFormSubmit}>\r\n      <Fieldset>\r\n        <Legend>\r\n          Currency converter\r\n        </Legend>\r\n        <p>\r\n          <Label>\r\n            I have: PLN\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label>\r\n            <Input value={amount} onChange={({ target }) => setAmount(target.value)} type=\"number\" min=\"0\" step=\"0.01\" />\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label> I want:\r\n            <Select value={currency} onChange={({ target }) => setCurrency(target.value)}>\r\n              {currencies.map((cur) => (\r\n                <option key={cur.value} value={cur.value}>\r\n                  {cur.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </Label>\r\n        </p>\r\n        <p>\r\n          <Label>\r\n            <Input value={convertCurrency.toFixed(2)} onChange={({ target }) => setConvertCurrency(target.value)} disabled={true} type=\"number\" />\r\n          </Label>\r\n        </p>\r\n        <StyledButton onClick={getCurrency}>\r\n          Convert\r\n        </StyledButton>\r\n      </Fieldset>\r\n    </FormSetup >\r\n  )\r\n}\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    font-size: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        font-size: 17px; \r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    padding-top: 150px;\r\n    text-shadow: 2px 2px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin-top: 70px;\r\n    text-shadow: 1px 1px ${({theme}) => theme.colors.gray};\r\n    color: ${({theme}) => theme.colors.waikawaGray};\r\n`;","import { StyledHeader, Title, Paragraph } from \"./styled\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <Title>\r\n                Welcome in Currency Converter\r\n            </Title>\r\n            <Paragraph>\r\n                nobody can cheat you here, i guess?\r\n            </Paragraph>\r\n        </StyledHeader>\r\n    )\r\n}\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const StyledFooter = styled.footer`\r\n    padding: 7px;\r\n    font-size: 20px;\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(11, 11, 11);\r\n    text-align: center;\r\n`;","import { StyledFooter } from \"./styled\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <StyledFooter>YouCode</StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/background.a19b2427.jpg\";","import styled from \"styled-components\";\r\nimport background from \"../background.jpg\"\r\n\r\nexport const Main = styled.main`\r\n    font-family: 'Josefin Slab', serif, cursive;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-top: -60px;\r\n    max-width: 100%;\r\n    height: 400px;\r\n`;\r\n","import { Main } from \"./styled\"\r\n\r\nconst Container = ({ children }) => {\r\n    return (\r\n        <Main>\r\n            {children}\r\n        </Main>\r\n    )\r\n};\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 12px;\r\n    margin-right: 19px;\r\n    padding-top: 380px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n        padding-top: 100px;\r\n    }\r\n`;","import { StyledClock } from \"./styled\"\r\nimport { useCurrentDate } from \"./useCurrentDate\"\r\n\r\nconst time = (date) => date.toLocaleString(\"en-UK\", {\r\n  weekday: \"long\",\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\",\r\n});\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <StyledClock>\r\n      Today is {time(date)}\r\n    </StyledClock>\r\n  );\r\n}\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};","export const theme = {\r\n    colors: {\r\n        waikawaGray: \"#57609a\",\r\n        gray: \"rgb(108 107 107)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 600\r\n    },\r\n};","import Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Container from \"./Container\";\r\nimport Clock from \"./Clock\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {theme} from \"./theme\"\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Container>\r\n    <Header />\r\n    <Form />\r\n    <Clock />\r\n    <Footer />\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}